<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Frameset//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-frameset.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head>
    <title>Syntax - NaturalSpec Documentation</title>
    <meta http-equiv="Content-Type" content="text/html; charset=iso-8859-1"/>
    <link type="text/css" rel="stylesheet" href="../main.css"/>
    <script type="text/javascript" src="../js/jquery-1.3.2.min.js"></script>
    <script type="text/javascript" src="../js/jquery.scrollTo-min.js"></script>
    <script type="text/javascript" src="../js/navigation.js"></script>
  </head>
  <body><div id="namespaces">
	<h2 class="fixed">Namespaces</h2>
	<div class="scroll">
		<ul><li>
          <a href="../NaturalSpec/index.htm" class="current">NaturalSpec</a>
      </li>
		</ul>
	</div>
</div><div id="types">
  <h2 class="fixed">Types in NaturalSpec</h2>
	<div class="scroll">
		<ul><li>
            <a href="../NaturalSpec/AssemblyInfo.htm">AssemblyInfo</a>
        </li><li>
            <a href="../NaturalSpec/AssertType.htm">AssertType</a>
        </li><li>
            <a href="../NaturalSpec/Example.htm">Example</a>
        </li><li>
            <a href="../NaturalSpec/Expectations.htm">Expectations</a>
        </li><li>
            <a href="../NaturalSpec/Fails.htm">Fails</a>
        </li><li>
            <a href="../NaturalSpec/FailsWith.htm">FailsWith</a>
        </li><li>
            <a href="../NaturalSpec/FailsWithType.htm">FailsWithType</a>
        </li><li>
            <a href="../NaturalSpec/File.htm">File</a>
        </li><li>
            <a href="../NaturalSpec/IlHelper.htm">IlHelper</a>
        </li><li>
            <a href="../NaturalSpec/Math.htm">Math</a>
        </li><li>
            <a href="../NaturalSpec/Mock.htm">Mock</a>
        </li><li>
            <a href="../NaturalSpec/ReturnException183c26a427ae489c8fd92ec21a0c9a59.htm">ReturnException183c26a427ae489c8fd92ec21a0c9a59</a>
        </li><li>
            <a href="../NaturalSpec/ReturnNoneException183c26a427ae489c8fd92ec21a0c9a59.htm">ReturnNoneException183c26a427ae489c8fd92ec21a0c9a59</a>
        </li><li>
            <a href="../NaturalSpec/Scenario.htm">Scenario</a>
        </li><li>
            <a href="../NaturalSpec/ScenarioSource.htm">ScenarioSource</a>
        </li><li>
            <a href="../NaturalSpec/SequenceFunctions.htm">SequenceFunctions</a>
        </li><li>
            <a href="../NaturalSpec/Source.htm">Source</a>
        </li><li>
            <a href="../NaturalSpec/Syntax.htm" class="current">Syntax</a>
        </li><li>
            <a href="../NaturalSpec/Tags.htm">Tags</a>
        </li><li>
            <a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a>
        </li><li>
            <a href="../NaturalSpec/TimeMeasurement.htm">TimeMeasurement</a>
        </li><li>
            <a href="../NaturalSpec/Utils.htm">Utils</a>
        </li>
		</ul>
	</div>
</div>
    <div class="header">
		<p class="class"><strong>Type</strong> Syntax</p>
		<p><strong>Namespace</strong> NaturalSpec</p>
	</div>
    <div class="sub-header">


			<h3 class="section">Methods</h3>
			<ul><li><a href="../NaturalSpec/Syntax.htm#And">And</a></li><li><a href="../NaturalSpec/Syntax.htm#As``1">As&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#be``1">be&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#castingAs``1">castingAs&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#checkEquality``2">checkEquality&lt;a, a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#doing``1">doing&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#doubleParam``2">doubleParam&lt;a, b&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#equal``1">equal&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#GenerateTestData">GenerateTestData</a></li><li><a href="../NaturalSpec/Syntax.htm#getting``1">getting&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#Given``1">Given&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#have``1">have&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#initScenario">initScenario</a></li><li><a href="../NaturalSpec/Syntax.htm#It``1">It&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#methodName">methodName</a></li><li><a href="../NaturalSpec/Syntax.htm#Named">Named</a></li><li><a href="../NaturalSpec/Syntax.htm#nothing``1">nothing&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#printMethod">printMethod</a></li><li><a href="../NaturalSpec/Syntax.htm#should``5">should&lt;a, b, c, d, e&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#ShouldFailWith">ShouldFailWith</a></li><li><a href="../NaturalSpec/Syntax.htm#shouldn't``5">shouldn't&lt;a, b, c, d, e&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#singleParam``1">singleParam&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#solving``1">solving&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#testData``3">testData&lt;a, b, c&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#TestWith">TestWith</a></li><li><a href="../NaturalSpec/Syntax.htm#TestWithList``1">TestWithList&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#tripleParam``3">tripleParam&lt;a, b, c&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#Verify``1">Verify&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#When``1">When&lt;a&gt;</a></li><li><a href="../NaturalSpec/Syntax.htm#Whereas``2">Whereas&lt;a, b&gt;</a></li>
			</ul>


	</div>



	<h3 class="section">Public static methods</h3>
<div id="And" class="method">
		<h4><span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> <strong>And</strong>(<a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a> p, <span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> list)</h4>
		<div class="content">




		</div>
	</div><div id="As``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>As&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Sets a test context up - same as "Given" 




		</div>
	</div><div id="be``1" class="method">
		<h4><span title="System.Tuple<AssertType, bool, bool, a>">Tuple&lt;AssertType, bool, bool, a&gt;</span> <strong>be&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<a, bool>">FSharpFunc&lt;a, bool&gt;</span> f, <span title="NaturalSpec.a">a</span> value)</h4>
		<div class="content">




		</div>
	</div><div id="castingAs``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>castingAs&lt;a&gt;</strong>(<span title="System.object">object</span> value)</h4>
		<div class="content">Fluid helper - prints "casting as type " 




		</div>
	</div><div id="checkEquality``2" class="method">
		<h4><span title="System.Tuple<AssertType, a, a, a>">Tuple&lt;AssertType, a, a, a&gt;</span> <strong>checkEquality&lt;a, a&gt;</strong>(<span title="NaturalSpec.a">a</span> expected, <span title="NaturalSpec.a">a</span> value, <span title="NaturalSpec.a">a</span> pipe)</h4>
		<div class="content">Tests for equality 




		</div>
	</div><div id="doing``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>doing&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Fluid helper - prints "doing " 




		</div>
	</div><div id="doubleParam``2" class="method">
		<h4><a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a> <strong>doubleParam&lt;a, b&gt;</strong>(<span title="NaturalSpec.a">a</span> a, <span title="NaturalSpec.b">b</span> b)</h4>
		<div class="content">




		</div>
	</div><div id="equal``1" class="method">
		<h4><span title="System.Tuple<AssertType, a, a, a>">Tuple&lt;AssertType, a, a, a&gt;</span> <strong>equal&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> expected, <span title="NaturalSpec.a">a</span> value)</h4>
		<div class="content">Fluid helper - prints "equal "
Tests for equality
Use it as in "|> It should equal x" 




		</div>
	</div><div id="GenerateTestData" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<FSharpList<TestCaseData>>">IEnumerable&lt;FSharpList&lt;TestCaseData&gt;&gt;</span> <strong>GenerateTestData</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<int, TestCaseParam>">FSharpFunc&lt;int, TestCaseParam&gt;</span> f, <span title="System.int">int</span> n)</h4>
		<div class="content">




		</div>
	</div><div id="getting``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>getting&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Fluid helper - prints "getting" 




		</div>
	</div><div id="Given``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>Given&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Sets a test context up - same as "As"
Represents the Arrange phase of "Arrange"-"Act"-"Assert" 




		</div>
	</div><div id="have``1" class="method">
		<h4><span title="System.Tuple<AssertType, bool, bool, a>">Tuple&lt;AssertType, bool, bool, a&gt;</span> <strong>have&lt;a&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<a, bool>">FSharpFunc&lt;a, bool&gt;</span> f, <span title="NaturalSpec.a">a</span> value)</h4>
		<div class="content">




		</div>
	</div><div id="initScenario" class="method">
		<h4><span title="System.void">void</span> <strong>initScenario</strong>()</h4>
		<div class="content">Inits a scenario 




		</div>
	</div><div id="It``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>It&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Tests a condition on the manipulated test context
Represents the Assert phase of "Arrange"-"Act"-"Assert" 




		</div>
	</div><div id="methodName" class="method">
		<h4><span title="System.string">string</span> <strong>methodName</strong>(<span title="System.int">int</span> n, <span title="System.object">object</span> x)</h4>
		<div class="content">Get the method name 




		</div>
	</div><div id="Named" class="method">
		<h4><span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> <strong>Named</strong>(<span title="System.string">string</span> name, <span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> list)</h4>
		<div class="content">Adds an Description to the testcase 




		</div>
	</div><div id="nothing``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>nothing&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Fluid helper - prints "nothing " 




		</div>
	</div><div id="printMethod" class="method">
		<h4><span title="System.void">void</span> <strong>printMethod</strong>(<span title="System.object">object</span> x)</h4>
		<div class="content">Prints the method name and the given parameter to the spec output 




		</div>
	</div><div id="should``5" class="method">
		<h4><span title="NaturalSpec.e">e</span> <strong>should&lt;a, b, c, d, e&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<a, FSharpFunc<b, Tuple<AssertType, c, d, e>>>">FSharpFunc&lt;a, FSharpFunc&lt;b, Tuple&lt;AssertType, c, d, e&gt;&gt;&gt;</span> f, <span title="NaturalSpec.a">a</span> x, <span title="NaturalSpec.b">b</span> y)</h4>
		<div class="content">




		</div>
	</div><div id="ShouldFailWith" class="method">
		<h4><span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> <strong>ShouldFailWith</strong>(<span title="System.Type">Type</span> exceptionType, <span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> list)</h4>
		<div class="content">Adds an ExpectedException to the testcase 




		</div>
	</div><div id="shouldn't``5" class="method">
		<h4><span title="NaturalSpec.e">e</span> <strong>shouldn't&lt;a, b, c, d, e&gt;</strong>(<span title="Microsoft.FSharp.Core.FSharpFunc<a, FSharpFunc<b, Tuple<AssertType, c, d, e>>>">FSharpFunc&lt;a, FSharpFunc&lt;b, Tuple&lt;AssertType, c, d, e&gt;&gt;&gt;</span> f, <span title="NaturalSpec.a">a</span> x, <span title="NaturalSpec.b">b</span> y)</h4>
		<div class="content">




		</div>
	</div><div id="singleParam``1" class="method">
		<h4><a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a> <strong>singleParam&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> a)</h4>
		<div class="content">




		</div>
	</div><div id="solving``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>solving&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Fluid helper - prints "solving" 




		</div>
	</div><div id="testData``3" class="method">
		<h4><span title="NUnit.Framework.TestCaseData">TestCaseData</span> <strong>testData&lt;a, b, c&gt;</strong>(<span title="NaturalSpec.a">a</span> x, <span title="NaturalSpec.b">b</span> y, <span title="NaturalSpec.c">c</span> z)</h4>
		<div class="content">generates TestCaseData object 




		</div>
	</div><div id="TestWith" class="method">
		<h4><span title="Microsoft.FSharp.Collections.FSharpList<TestCaseData>">FSharpList&lt;TestCaseData&gt;</span> <strong>TestWith</strong>(<a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a> p)</h4>
		<div class="content">




		</div>
	</div><div id="TestWithList``1" class="method">
		<h4><span title="System.Collections.Generic.IEnumerable<TestCaseData>">IEnumerable&lt;TestCaseData&gt;</span> <strong>TestWithList&lt;a&gt;</strong>(<span title="System.Collections.Generic.IEnumerable<a>">IEnumerable&lt;a&gt;</span> seq)</h4>
		<div class="content">Generates from a list 




		</div>
	</div><div id="tripleParam``3" class="method">
		<h4><a href="../NaturalSpec/TestCaseParam.htm">TestCaseParam</a> <strong>tripleParam&lt;a, b, c&gt;</strong>(<span title="NaturalSpec.a">a</span> a, <span title="NaturalSpec.b">b</span> b, <span title="NaturalSpec.c">c</span> c)</h4>
		<div class="content">




		</div>
	</div><div id="Verify``1" class="method">
		<h4><span title="System.void">void</span> <strong>Verify&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> x)</h4>
		<div class="content">Verifies a scenario 




		</div>
	</div><div id="When``1" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>When&lt;a&gt;</strong>(<span title="NaturalSpec.a">a</span> f)</h4>
		<div class="content">Acts on the given test context
Represents the Act phase of "Arrange"-"Act"-"Assert" 




		</div>
	</div><div id="Whereas``2" class="method">
		<h4><span title="NaturalSpec.a">a</span> <strong>Whereas&lt;a, b&gt;</strong>(<span title="NaturalSpec.a">a</span> v, <span title="NaturalSpec.b">b</span> f)</h4>
		<div class="content">Tests a condition on the given value
Represents the Assert phase of "Arrange"-"Act"-"Assert" 




		</div>
	</div>

<div id="footer">
  <p>Based on v1.3.4.1 of NaturalSpec</p>
  <p>Generated by <a href="http://docu.jagregory.com">docu</a></p>
</div>
  </body>
</html>